# Description:
#   TIFF library

licenses(["notice"])  # BSD-like licence

exports_files(["COPYRIGHT"])

cc_library(
    name = "libtiff",
    srcs = glob(
        [
            "libtiff/tif_*.c",
        ],
        exclude = [
            "libtiff/tif_win32.c",
        ],
    ) + [
        "libtiff/tif_stream.cxx",
    ],
    hdrs = glob([
        "libtiff/*.h",
    ]) + [
        "libtiff/tif_config.h",
        "libtiff/tiffconf.h",
        "libtiff/tiffio.hxx",
    ],
    defines = [],
    includes = [
        "libtiff",
    ],
    linkopts = [],
    visibility = ["//visibility:public"],
    deps = [],
)

genrule(
    name = "tiffconf_h",
    outs = ["libtiff/tiffconf.h"],
    cmd = "\n".join([
        "cat <<'EOF' >$@",
        "#ifndef _TIFFCONF_",
        "#define _TIFFCONF_",
        "/* Signed 16-bit type */",
        "#define TIFF_INT16_T signed short",
        "/* Signed 32-bit type */",
        "#define TIFF_INT32_T signed int",
        "/* Signed 64-bit type */",
        "#define TIFF_INT64_T signed long",
        "/* Signed 8-bit type */",
        "#define TIFF_INT8_T signed char",
        "/* Unsigned 16-bit type */",
        "#define TIFF_UINT16_T unsigned short",
        "/* Unsigned 32-bit type */",
        "#define TIFF_UINT32_T unsigned int",
        "/* Unsigned 64-bit type */",
        "#define TIFF_UINT64_T unsigned long",
        "/* Unsigned 8-bit type */",
        "#define TIFF_UINT8_T unsigned char",
        "/* Signed size type */",
        "#define TIFF_SSIZE_T signed long",
        "/* Pointer difference type */",
        "#define TIFF_PTRDIFF_T ptrdiff_t",
        "/* Compatibility stuff. */",
        "/* Define as 0 or 1 according to the floating point format suported by the",
        "   machine */",
        "#define HAVE_IEEEFP 1",
        "/* Set the native cpu bit order (FILLORDER_LSB2MSB or FILLORDER_MSB2LSB) */",
        "#define HOST_FILLORDER FILLORDER_LSB2MSB",
        "/* Native cpu byte order: 1 if big-endian (Motorola) or 0 if little-endian",
        "   (Intel) */",
        "#define HOST_BIGENDIAN 0",
        "/* Support CCITT Group 3 & 4 algorithms */",
        "#define CCITT_SUPPORT 1",
        "/* Support JPEG compression (requires IJG JPEG library) */",
        "/* #undef JPEG_SUPPORT */",
        "/* Support JBIG compression (requires JBIG-KIT library) */",
        "/* #undef JBIG_SUPPORT */",
        "/* Support LogLuv high dynamic range encoding */",
        "#define LOGLUV_SUPPORT 1",
        "/* Support LZW algorithm */",
        "#define LZW_SUPPORT 1",
        "/* Support NeXT 2-bit RLE algorithm */",
        "#define NEXT_SUPPORT 1",
        "/* Support Old JPEG compresson (read contrib/ojpeg/README first! Compilation",
        "   fails with unpatched IJG JPEG library) */",
        "/* #undef OJPEG_SUPPORT */",
        "/* Support Macintosh PackBits algorithm */",
        "#define PACKBITS_SUPPORT 1",
        "/* Support Pixar log-format algorithm (requires Zlib) */",
        "/* #undef PIXARLOG_SUPPORT */",
        "/* Support ThunderScan 4-bit RLE algorithm */",
        "#define THUNDER_SUPPORT 1",
        "/* Support Deflate compression */",
        "/* #undef ZIP_SUPPORT */",
        "/* Support strip chopping (whether or not to convert single-strip uncompressed",
        "   images to mutiple strips of ~8Kb to reduce memory usage) */",
        "#define STRIPCHOP_DEFAULT TIFF_STRIPCHOP",
        "/* Enable SubIFD tag (330) support */",
        "#define SUBIFD_SUPPORT 1",
        "/* Treat extra sample as alpha (default enabled). The RGBA interface will",
        "   treat a fourth sample with no EXTRASAMPLE_ value as being ASSOCALPHA. Many",
        "   packages produce RGBA files but don't mark the alpha properly. */",
        "#define DEFAULT_EXTRASAMPLE_AS_ALPHA 1",
        "/* Pick up YCbCr subsampling info from the JPEG data stream to support files",
        "   lacking the tag (default enabled). */",
        "#define CHECK_JPEG_YCBCR_SUBSAMPLING 1",
        "/* Support MS MDI magic number files as TIFF */",
        "#define MDI_SUPPORT 1",
        "/*",
        " * Feature support definitions.",
        " * XXX: These macros are obsoleted. Don't use them in your apps!",
        " * Macros stays here for backward compatibility and should be always defined.",
        " */",
        "#define COLORIMETRY_SUPPORT",
        "#define YCBCR_SUPPORT",
        "#define CMYK_SUPPORT",
        "#define ICC_SUPPORT",
        "#define PHOTOSHOP_SUPPORT",
        "#define IPTC_SUPPORT",
        "#endif /* _TIFFCONF_ */",
        "EOF",
    ]),
)

genrule(
    name = "tif_config_h",
    outs = ["libtiff/tif_config.h"],
    cmd = "\n".join([
        "cat <<'EOF' >$@",
        "#define CCITT_SUPPORT 1",
        "#define CHECK_JPEG_YCBCR_SUBSAMPLING 1",
        "#define CXX_SUPPORT 1",
        "#define HAVE_ASSERT_H 1",
        "#define HAVE_DECL_OPTARG 1",
        "#define HAVE_DLFCN_H 1",
        "#define HAVE_FCNTL_H 1",
        "#define HAVE_FSEEKO 1",
        "#define HAVE_GETOPT 1",
        "#define HAVE_IEEEFP 1",
        "#define HAVE_INTTYPES_H 1",
        "#define HAVE_LFIND 1",
        "#define HAVE_MEMORY_H 1",
        "#define HAVE_MMAP 1",
        "#define HAVE_PTHREAD 1",
        "#define HAVE_SEARCH_H 1",
        "#define HAVE_SNPRINTF 1",
        "#define HAVE_STDINT_H 1",
        "#define HAVE_STDLIB_H 1",
        "#define HAVE_STRCASECMP 1",
        "#define HAVE_STRINGS_H 1",
        "#define HAVE_STRING_H 1",
        "#define HAVE_STRTOL 1",
        "#define HAVE_STRTOLL 1",
        "#define HAVE_STRTOUL 1",
        "#define HAVE_STRTOULL 1",
        "#define HAVE_SYS_STAT_H 1",
        "#define HAVE_SYS_TYPES_H 1",
        "#define HAVE_UNISTD_H 1",
        "#define HOST_BIGENDIAN 0",
        "#define HOST_FILLORDER FILLORDER_LSB2MSB",
        "#define LOGLUV_SUPPORT 1",
        '#define LT_OBJDIR ".libs/"',
        "#define LZW_SUPPORT 1",
        "#define MDI_SUPPORT 1",
        "#define NEXT_SUPPORT 1",
        '#define PACKAGE "tiff"',
        '#define PACKAGE_BUGREPORT "tiff@lists.maptools.org"',
        '#define PACKAGE_NAME "LibTIFF Software"',
        '#define PACKAGE_STRING "LibTIFF Software 4.0.10"',
        '#define PACKAGE_TARNAME "tiff"',
        '#define PACKAGE_URL ""',
        '#define PACKAGE_VERSION "4.0.10"',
        "#define PACKBITS_SUPPORT 1",
        "#define SIZEOF_SIGNED_INT 4",
        "#define SIZEOF_SIGNED_LONG 8",
        "#define SIZEOF_SIGNED_LONG_LONG 8",
        "#define SIZEOF_SIZE_T 8",
        "#define SIZEOF_UNSIGNED_CHAR_P 8",
        "#define SIZEOF_UNSIGNED_INT 4",
        "#define SIZEOF_UNSIGNED_LONG 8",
        "#define SIZEOF_UNSIGNED_LONG_LONG 8",
        "#define STDC_HEADERS 1",
        "#define STRIPCHOP_DEFAULT TIFF_STRIPCHOP",
        "#define STRIP_SIZE_DEFAULT 8192",
        "#define SUBIFD_SUPPORT 1",
        "#define THUNDER_SUPPORT 1",
        "#define TIFF_INT16_T signed short",
        '#define TIFF_INT32_FORMAT "%d"',
        "#define TIFF_INT32_T signed int",
        '#define TIFF_INT64_FORMAT "%ld"',
        "#define TIFF_INT64_T signed long",
        "#define TIFF_INT8_T signed char",
        '#define TIFF_PTRDIFF_FORMAT "%ld"',
        "#define TIFF_PTRDIFF_T ptrdiff_t",
        '#define TIFF_SIZE_FORMAT "%lu"',
        "#define TIFF_SIZE_T unsigned long",
        '#define TIFF_SSIZE_FORMAT "%ld"',
        "#define TIFF_SSIZE_T signed long",
        "#define TIFF_UINT16_T unsigned short",
        '#define TIFF_UINT32_FORMAT "%u"',
        "#define TIFF_UINT32_T unsigned int",
        '#define TIFF_UINT64_FORMAT "%lu"',
        "#define TIFF_UINT64_T unsigned long",
        "#define TIFF_UINT8_T unsigned char",
        "#define TIME_WITH_SYS_TIME 1",
        '#define VERSION "4.0.10"',
        "#if defined AC_APPLE_UNIVERSAL_BUILD",
        "# if defined __BIG_ENDIAN__",
        "#  define WORDS_BIGENDIAN 1",
        "# endif",
        "#else",
        "# ifndef WORDS_BIGENDIAN",
        "# endif",
        "#endif",
        "#define X_DISPLAY_MISSING 1",
        "#ifndef _DARWIN_USE_64_BIT_INODE",
        "# define _DARWIN_USE_64_BIT_INODE 1",
        "#endif",
        "#ifndef __cplusplus",
        "#endif",
        "EOF",
    ]),
)
