# Description:
# C library for high-throughput sequencing data formats
#

licenses(["notice"])  # MIT/Expat, cram uses BSD

exports_files(["LICENSE"])

version = "1.9"

# Generated by running
# ./configure --disable-libcurl --disable-gcs --disable-s3
genrule(
    name = "config_h",
    outs = ["config.h"],
    cmd = """
        exec > "$@"
        echo '#define HAVE_DRAND48 1'
        echo '#define HAVE_FDATASYNC 1'
        echo '#define HAVE_FSEEKO 1'
        echo '#define HAVE_FSYNC 1'
        echo '#define HAVE_GETPAGESIZE 1'
        echo '#define HAVE_GMTIME_R 1'
        echo '#define HAVE_INTTYPES_H 1'
        echo '#define HAVE_LIBBZ2 1'
        echo '#define HAVE_LIBLZMA 1'
        echo '#define HAVE_LIBZ 1'
        echo '#define HAVE_MEMORY_H 1'
        echo '#define HAVE_MMAP 1'
        echo '#define HAVE_STDINT_H 1'
        echo '#define HAVE_STDLIB_H 1'
        echo '#define HAVE_STRING_H 1'
        echo '#define HAVE_STRINGS_H 1'
        echo '#define HAVE_SYS_PARAM_H 1'
        echo '#define HAVE_SYS_STAT_H 1'
        echo '#define HAVE_SYS_TYPES_H 1'
        echo '#define HAVE_UNISTD_H 1'
        echo '#define PACKAGE_BUGREPORT "samtools-help@lists.sourceforge.net"'
        echo '#define PACKAGE_NAME "HTSlib"'
        echo '#define PACKAGE_STRING "HTSlib %s"'
        echo '#define PACKAGE_TARNAME "htslib"'
        echo '#define PACKAGE_URL "http://www.htslib.org/"'
        echo '#define PACKAGE_VERSION "%s"'
        echo '#define PLUGIN_EXT ".so"'
        echo '#define STDC_HEADERS 1'
    """ % (version, version),
)

genrule(
    name = "version",
    outs = ["version.h"],
    cmd = """echo '#define HTS_VERSION "%s"' > "$@" """ % version,
)

# Vanilla htslib, no extensions.
cc_library(
    name = "htslib",
    srcs = [
        "bcf_sr_sort.c",
        "bcf_sr_sort.h",
        "bgzf.c",
        "config.h",
        "cram/cram_codecs.c",
        "cram/cram_decode.c",
        "cram/cram_encode.c",
        "cram/cram_external.c",
        "cram/cram_index.c",
        "cram/cram_io.c",
        "cram/cram_samtools.c",
        "cram/cram_stats.c",
        "cram/files.c",
        "cram/mFILE.c",
        "cram/mFILE.h",
        "cram/misc.h",
        "cram/open_trace_file.c",
        "cram/open_trace_file.h",
        "cram/os.h",
        "cram/pooled_alloc.c",
        "cram/rANS_byte.h",
        "cram/rANS_static.c",
        "cram/rANS_static.h",
        "cram/sam_header.c",
        "cram/string_alloc.c",
        "cram/string_alloc.h",
        "errmod.c",
        "faidx.c",
        "hfile.c",
        "hfile_internal.h",
        "hfile_net.c",
        "hts.c",
        "hts_internal.h",
        "hts_os.c",
        "kfunc.c",
        "knetfile.c",
        "kstring.c",
        "md5.c",
        "multipart.c",
        "os/lzma_stub.h",
        "plugin.c",
        "probaln.c",
        "realn.c",
        "regidx.c",
        "sam.c",
        "synced_bcf_reader.c",
        "tbx.c",
        "textutils.c",
        "textutils_internal.h",
        "thread_pool.c",
        "thread_pool_internal.h",
        "vcf.c",
        "vcf_sweep.c",
        "vcfutils.c",
        "version.h",
    ],
    # Genrules in lieu of ./configure.  Minimum viable linux.
    hdrs = glob(["htslib/*.h"]) + [
        "cram/cram.h",
        "cram/pooled_alloc.h",
    ],
    copts = [
        "-Wno-implicit-function-declaration",  # cram_io.c
        "-Wno-unused-variable",  # cram_encode.c
        "-Wno-error",
    ],
    includes = ["."],
    textual_hdrs = [
        "cram/cram_samtools.h",
        "cram/sam_header.h",
        "cram/cram_structs.h",
        "cram/cram_io.h",
        "cram/cram_encode.h",
        "cram/cram_decode.h",
        "cram/cram_stats.h",
        "cram/cram_codecs.h",
        "cram/cram_index.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@bzip2",
        "@xz//:lzma",
        "@zlib",
    ],
)
