diff -Naur a/nucleus/io/fastq_reader.cc b/nucleus/io/fastq_reader.cc
--- a/nucleus/io/fastq_reader.cc	2023-02-26 04:04:19.097785713 +0000
+++ b/nucleus/io/fastq_reader.cc	2023-02-26 04:15:52.293582517 +0000
@@ -76,7 +76,7 @@
   }
   record->set_sequence(string(sequence));
   record->set_quality(string(quality));
-  return tf::Status::OK();
+  return tsl::OkStatus();
 }
 }  // namespace
 
@@ -145,7 +145,7 @@
   *sequence = sequence_or.ValueOrDie();
   *pad = pad_or.ValueOrDie();
   *quality = quality_or.ValueOrDie();
-  return tf::Status::OK();
+  return tsl::OkStatus();
 
 data_loss:
   return tf::errors::DataLoss("Failed to parse FASTQ record");
diff -Naur a/nucleus/io/fastq_reader.h b/nucleus/io/fastq_reader.h
--- a/nucleus/io/fastq_reader.h	2023-02-26 04:04:19.097785713 +0000
+++ b/nucleus/io/fastq_reader.h	2023-02-26 04:16:46.494817526 +0000
@@ -76,7 +76,7 @@
 
   // This no-op function is needed only for Python context manager support.  Do
   // not use it! Returns a Status indicating whether the enter was successful.
-  tensorflow::Status PythonEnter() const { return tensorflow::Status::OK(); }
+  tensorflow::Status PythonEnter() const { return tsl::OkStatus(); }
 
   // Get the options controlling the behavior of this FastqReader.
   const nucleus::genomics::v1::FastqReaderOptions& Options() const {
diff -Naur a/nucleus/io/reader_base.cc b/nucleus/io/reader_base.cc
--- a/nucleus/io/reader_base.cc	2023-02-26 04:04:19.097785713 +0000
+++ b/nucleus/io/reader_base.cc	2023-02-26 04:17:30.943830589 +0000
@@ -56,7 +56,7 @@
     reader_->live_iterable_ = nullptr;
     reader_ = nullptr;
   }
-  return tensorflow::Status::OK();
+  return tsl::OkStatus();
 }
 
 bool IterableBase::IsAlive() const {
@@ -66,11 +66,11 @@
 tensorflow::Status IterableBase::CheckIsAlive() const {
   if (!IsAlive())
     return tensorflow::errors::FailedPrecondition("Reader is not alive");
-  return tensorflow::Status::OK();
+  return tsl::OkStatus();
 }
 
 tensorflow::Status IterableBase::PythonEnter() {
-  return tensorflow::Status::OK();
+  return tsl::OkStatus();
 }
 
 tensorflow::Status IterableBase::PythonExit() {
diff -Naur a/nucleus/io/reader_base.h b/nucleus/io/reader_base.h
--- a/nucleus/io/reader_base.h	2023-02-26 04:04:19.097785713 +0000
+++ b/nucleus/io/reader_base.h	2023-02-26 04:14:44.948047970 +0000
@@ -129,7 +129,7 @@
 
  private:
   Record current_record_;
-  tensorflow::Status current_status_ = tensorflow::Status::OK();
+  tensorflow::Status current_status_ = tsl::OkStatus();
   bool IsOK() { return current_status_.ok(); }
 
  public:
diff -Naur a/nucleus/io/text_reader.cc b/nucleus/io/text_reader.cc
--- a/nucleus/io/text_reader.cc	2023-02-26 04:04:19.101785802 +0000
+++ b/nucleus/io/text_reader.cc	2023-02-26 04:18:23.589030554 +0000
@@ -78,7 +78,7 @@
   if (hts_ok < 0) {
     return tf::errors::Internal("hts_close() failed with return code ", hts_ok);
   }
-  return tf::Status::OK();
+  return tsl::OkStatus();
 }
 
 TextReader::TextReader(htsFile* hts_file)
diff -Naur a/nucleus/protos/BUILD b/nucleus/protos/BUILD
--- a/nucleus/protos/BUILD	2023-02-26 04:04:19.101785802 +0000
+++ b/nucleus/protos/BUILD	2023-02-26 04:08:24.867390853 +0000
@@ -1,62 +1,6 @@
-load("//:third_party/clif.bzl", "py_clif_cc", "pyclif_proto_library")
-load("@protobuf_archive//:protobuf.bzl", "py_proto_library")
-load("@protobuf_archive//:protobuf.bzl", "cc_proto_library")
-
-package(default_visibility = [
-    "//visibility:public",
-])
-
-licenses(["notice"])  # Apache License 2.0
-
-exports_files(["LICENSE"])
-
-# ----------------------------------------------------------------------
-# proto_library's
-# ----------------------------------------------------------------------
-
-proto_library(
-    name = "bed_proto",
-    srcs = [
-        "bed.proto",
-    ],
-)
-
-proto_library(
-    name = "bedgraph_proto",
-    srcs = [
-        "bedgraph.proto",
-    ],
-)
-
-proto_library(
-    name = "cigar_proto",
-    srcs = ["cigar.proto"],
-)
-
-proto_library(
-    name = "fasta_proto",
-    srcs = [
-        "fasta.proto",
-    ],
-    deps = [
-        ":range_proto",  # NO COPYBARA
-        ":reference_proto",  # NO COPYBARA
-    ],
-)
-
 proto_library(
     name = "fastq_proto",
-    srcs = [
-        "fastq.proto",
-    ],
-)
-
-proto_library(
-    name = "gff_proto",
-    srcs = [
-        "gff.proto",
-    ],
-    deps = [":range_proto"],  # NO COPYBARA
+    srcs = ["fastq.proto"],
 )
 
 proto_library(
@@ -70,16 +14,8 @@
 )
 
 proto_library(
-    name = "reads_proto",
-    srcs = [
-        "reads.proto",
-    ],
-    deps = [
-        ":cigar_proto",  # NO COPYBARA
-        ":position_proto",  # NO COPYBARA
-        ":reference_proto",  # NO COPYBARA
-        ":struct_proto",  # NO COPYBARA
-    ],
+    name = "cigar_proto",
+    srcs = ["cigar.proto"],
 )
 
 proto_library(
@@ -88,7 +24,7 @@
         "reference.proto",
     ],
     deps = [
-        ":range_proto",  # NO COPYBARA
+        ":range_proto",
     ],
 )
 
@@ -103,355 +39,38 @@
         "variants.proto",
     ],
     deps = [
-        ":reference_proto",  # NO COPYBARA
-        ":struct_proto",  # NO COPYBARA
+        ":reference_proto",
+        ":struct_proto",
     ],
 )
 
 proto_library(
-    name = "feature_proto",
-    srcs = ["feature.proto"],
-)
-
-proto_library(
-    name = "example_proto",
-    srcs = ["feature.proto"],
-    deps = [
-        ":feature_proto",  # NO COPYBARA
-    ],
-)
-
-# ----------------------------------------------------------------------
-# cc_proto_library's
-# ----------------------------------------------------------------------
-
-# TODO(thomaswc): Consider definining some new .bzl rules to reduce the
-# boilerplate in these cc_proto_library rules and in this file in general.
-
-cc_proto_library(
-    name = "bed_cc_pb2",
-    srcs = ["bed.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "bedgraph_cc_pb2",
-    srcs = ["bedgraph.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "cigar_cc_pb2",
-    srcs = ["cigar.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "fasta_cc_pb2",
-    srcs = ["fasta.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-    deps = [
-        ":range_cc_pb2",
-        ":reference_cc_pb2",
-    ],
-)
-
-cc_proto_library(
-    name = "fastq_cc_pb2",
-    srcs = ["fastq.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "gff_cc_pb2",
-    srcs = ["gff.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-    deps = [":range_cc_pb2"],
-)
-
-cc_proto_library(
-    name = "position_cc_pb2",
-    srcs = ["position.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "range_cc_pb2",
-    srcs = ["range.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
-    name = "reads_cc_pb2",
-    srcs = ["reads.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-    deps = [
-        ":cigar_cc_pb2",
-        ":position_cc_pb2",
-        ":reference_cc_pb2",
-        ":struct_cc_pb2",
+    name = "reads_proto",
+    srcs = [
+        "reads.proto",
     ],
-)
-
-cc_proto_library(
-    name = "reference_cc_pb2",
-    srcs = ["reference.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
     deps = [
-        ":range_cc_pb2",
+        ":cigar_proto",
+        ":position_proto",
+        ":reference_proto",
+        ":struct_proto",
     ],
 )
 
 cc_proto_library(
-    name = "struct_cc_pb2",
-    srcs = ["struct.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-)
-
-cc_proto_library(
     name = "variants_cc_pb2",
-    srcs = ["variants.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-    deps = [
-        ":reference_cc_pb2",
-        ":struct_cc_pb2",
-    ],
+    visibility = ["//visibility:public"],
+    deps = [":variants_proto"],
 )
 
 cc_proto_library(
-    name = "feature_cc_pb2",
-    srcs = ["feature.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
+    name = "reads_cc_pb2",
+    visibility = ["//visibility:public"],
+    deps = [":reads_proto"],
 )
 
 cc_proto_library(
-    name = "example_cc_pb2",
-    srcs = ["example.proto"],
-    default_runtime = "@protobuf_archive//:protobuf",
-    protoc = "@protobuf_archive//:protoc",
-    deps = [
-        ":feature_cc_pb2",
-    ],
-)
-
-cc_library(
-    name = "all_nucleus_protos_cc",
-    deps = [
-        ":bed_cc_pb2",
-        ":bedgraph_cc_pb2",
-        ":cigar_cc_pb2",
-        ":fasta_cc_pb2",
-        ":fastq_cc_pb2",
-        ":gff_cc_pb2",
-        ":position_cc_pb2",
-        ":range_cc_pb2",
-        ":reads_cc_pb2",
-        ":reference_cc_pb2",
-        ":struct_cc_pb2",
-        ":variants_cc_pb2",
-    ],
-)
-
-# ----------------------------------------------------------------------
-# py_proto_library's
-# ----------------------------------------------------------------------
-
-py_proto_library(
-    name = "bed_py_pb2",
-    srcs = ["bed.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "bedgraph_py_pb2",
-    srcs = ["bedgraph.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "cigar_py_pb2",
-    srcs = ["cigar.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "gff_py_pb2",
-    srcs = ["gff.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [":range_py_pb2"],
-)
-
-py_proto_library(
-    name = "fasta_py_pb2",
-    srcs = ["fasta.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [
-        ":range_py_pb2",
-        ":reference_py_pb2",
-    ],
-)
-
-py_proto_library(
-    name = "fastq_py_pb2",
-    srcs = ["fastq.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "position_py_pb2",
-    srcs = ["position.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "range_py_pb2",
-    srcs = ["range.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "reads_py_pb2",
-    srcs = ["reads.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [
-        ":cigar_py_pb2",
-        ":position_py_pb2",
-        ":reference_py_pb2",
-        ":struct_py_pb2",
-    ],
-)
-
-py_proto_library(
-    name = "reference_py_pb2",
-    srcs = ["reference.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [
-        ":range_py_pb2",
-    ],
-)
-
-py_proto_library(
-    name = "struct_py_pb2",
-    srcs = ["struct.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "variants_py_pb2",
-    srcs = ["variants.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [
-        ":reference_py_pb2",
-        ":struct_py_pb2",
-    ],
-)
-
-py_proto_library(
-    name = "feature_py_pb2",
-    srcs = ["feature.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-)
-
-py_proto_library(
-    name = "example_py_pb2",
-    srcs = ["example.proto"],
-    default_runtime = "@protobuf_archive//:protobuf_python",
-    protoc = "@protobuf_archive//:protoc",
-    py_libs = ["//nucleus:__init__py"],
-    deps = [
-        ":feature_py_pb2",
-    ],
-)
-
-# ----------------------------------------------------------------------
-# pyclif targets
-# ----------------------------------------------------------------------
-
-pyclif_proto_library(
-    name = "bed_pyclif",
-    proto_lib = ":bed_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "bedgraph_pyclif",
-    proto_lib = ":bedgraph_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "gff_pyclif",
-    proto_lib = ":gff_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "fasta_pyclif",
-    proto_lib = ":fasta_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "fastq_pyclif",
-    proto_lib = ":fastq_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "position_pyclif",
-    proto_lib = ":position_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "range_pyclif",
-    proto_lib = ":range_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "reads_pyclif",
-    proto_lib = ":reads_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "reference_pyclif",
-    proto_lib = ":reference_proto",  # NO COPYBARA
-)
-
-pyclif_proto_library(
-    name = "variants_pyclif",
-    proto_lib = ":variants_proto",  # NO COPYBARA
+    name = "fastq_cc_pb2",
+    visibility = ["//visibility:public"],
+    deps = [":fastq_proto"],
 )
diff -Naur a/nucleus/vendor/BUILD b/nucleus/vendor/BUILD
--- a/nucleus/vendor/BUILD	2023-02-26 04:04:19.105785893 +0000
+++ b/nucleus/vendor/BUILD	2023-02-26 04:08:24.867390853 +0000
@@ -1,4 +1,4 @@
-load("//:third_party/clif.bzl", "py_clif_cc")
+#load("//:third_party/clif.bzl", "py_clif_cc")
 
 package(
     default_visibility = [
