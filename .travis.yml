dist: xenial
sudo: required
language: minimal

git:
  quiet: true

services:
- docker

cache:
  directories:
  - .cache/pip

addons:
  apt:
    update: true
    packages:
    - python3-pip

install:
- python --version
- [ "${TRAVIS_OS_NAME}" == "osx" ] && easy_install twine || pip3 install -q twine
- twine --version

before_script:
- echo bash -x -e tests/test_ignite/start_ignite.sh
- echo bash -x -e tests/test_kafka/kafka_test.sh start kafka
- echo bash -x -e tests/test_kinesis/kinesis_test.sh start kinesis

stages:
- macos
- build
- preview
- install
- release

jobs:
  include:
  - stage: build
    name: "Ubuntu 16.04 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: build
    name: "Ubuntu 18.04 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: preview
    name: "TensorFlow 2.0 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tf-nightly-2.0-preview"
  - stage: macos
    name: "TensorFlow 2.0 (macOS) Build"
    os: osx
    osx_image: xcode9
    script:
    - |
      set -e -x
      python --version
      python -m pip --version
      export TENSORFLOW_INSTALL="tf-nightly-2.0-preview"
  - stage: install
    name: "Python/R Install on Ubuntu 16.04"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: install
    name: "Python/R Install on Ubuntu 18.04"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: release
    name: "Nightly Release"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"

notifications:
- email: false
