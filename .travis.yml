dist: xenial
sudo: required
language: minimal

git:
  quiet: true

services:
- docker

cache:
  directories:
  - .cache/pip

addons:
  apt:
    update: true
    packages:
    - python3-pip

install:
- python --version
- curl https://bootstrap.pypa.io/get-pip.py | sudo python
- python -m pip --version
- sudo python -m pip install -U twine
- twine --version
- sudo python -m pip install -U matplotlib numpy --ignore-installed six
- sudo python -m pip install tensorflow==1.13.0rc2
- python -c 'import tensorflow as tf; print(tf.version.VERSION)'
- python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))'
- python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))'
- ./configure.sh
- export BAZEL_VERSION=0.20.0 BAZEL_OS=darwin
- curl -sOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-${BAZEL_OS}-x86_64.sh
- chmod +x bazel-${BAZEL_VERSION}-installer-${BAZEL_OS}-x86_64.sh
- ./bazel-${BAZEL_VERSION}-installer-${BAZEL_OS}-x86_64.sh 2>&1 > bazel-install.log || (cat bazel-install.log && false)
- rm -rf bazel-${BAZEL_VERSION}-installer-${BAZEL_OS}-x86_64.sh bazel-install.log
- bazel build -s --verbose_failures //tensorflow_io/...

before_script:
- echo bash -x -e tests/test_ignite/start_ignite.sh
- echo bash -x -e tests/test_kafka/kafka_test.sh start kafka
- echo bash -x -e tests/test_kinesis/kinesis_test.sh start kinesis

stages:
- macos
- build
- preview
- install
- release

jobs:
  include:
  - stage: build
    name: "Ubuntu 16.04 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: build
    name: "Ubuntu 18.04 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: preview
    name: "TensorFlow 2.0 Build"
    script:
    - |
      set -e -x
      export TENSORFLOW_INSTALL="tf-nightly-2.0-preview"
  - stage: macos
    name: "TensorFlow 2.0 (macOS) Build"
    os: osx
    osx_image: xcode9
    script:
    - |
      set -e -x
      python --version
      python -m pip --version
      export TENSORFLOW_INSTALL="tf-nightly-2.0-preview"
  - stage: install
    name: "Python/R Install on Ubuntu 16.04"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: install
    name: "Python/R Install on Ubuntu 18.04"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"
  - stage: release
    name: "Nightly Release"
    script:
    - |
      set -e
      export TENSORFLOW_INSTALL="tensorflow==1.13.0rc2"

notifications:
- email: false
