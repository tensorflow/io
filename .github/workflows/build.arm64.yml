name: Release arm64 on macOS

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  macos-arm64-bazel:
    name: Bazel arm64 on macOS
    runs-on: macos-13-xlarge
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Bazel on macOS
        run: |
          set -x -e
          bash -e .github/workflows/build.bazel.sh python3
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ runner.os }}-arm64-bazel-bin
          path: |
            build/tensorflow_io
            build/tensorflow_io_gcs_filesystem
      - run: |
          set -x -e
          echo "Successfully completely macOS arm64 release"
          
  macos-arm64-wheel:
    name: Wheel ${{ matrix.python }} macOS arm64
    needs: macos-arm64-bazel
    runs-on: macos-13-xlarge
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ runner.os }}-arm64-bazel-bin
          path: bazel-bin
      #- uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
      #  with:
      #    python-version: "${{ matrix.python }}"
      - name: Wheel ${{ matrix.python }} macOS
        run: |
          set -x -e
          python3 --version
          python --version
          brew search python
          brew install python@${{ matrix.python }}
          python${{ matrix.python }} --version
          python${{ matrix.python }} -m pip install --break-system-packages -U wheel setuptools
          python${{ matrix.python }} setup.py --data bazel-bin -q bdist_wheel --plat-name macosx_12_0_arm64
          rm -rf build
          python${{ matrix.python }} setup.py --project tensorflow-io-gcs-filesystem --data bazel-bin -q bdist_wheel --plat-name macosx_12_0_arm64
          ls dist/*
          mkdir -p wheelhouse
          for f in dist/*.whl; do
            echo "disable delocate due to build breaks: delocate-wheel -w wheelhouse  $f"
            cp $f wheelhouse
          done
          ls wheelhouse/*
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ runner.os }}-arm64-${{ matrix.python }}-wheel
          path: wheelhouse

  release-macos-arm64:
    name: Release (MacOS arm64)
    needs: macos-arm64-wheel
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: macOS-arm64-3.9-wheel
          path: macOS-arm64-3.9-wheel
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: macOS-arm64-3.10-wheel
          path: macOS-arm64-3.10-wheel
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with: 
          name: macOS-arm64-3.11-wheel 
          path: macOS-arm64-3.11-wheel
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with: 
          name: macOS-arm64-3.12-wheel 
          path: macOS-arm64-3.12-wheel
      - run: |
          set -e -x
          mkdir -p wheelhouse
          cp macOS-arm64-3.9-wheel/*.whl wheelhouse/
          cp macOS-arm64-3.10-wheel/*.whl wheelhouse/
          cp macOS-arm64-3.11-wheel/*.whl wheelhouse/
          cp macOS-arm64-3.12-wheel/*.whl wheelhouse/
          ls -la wheelhouse/
          sha256sum wheelhouse/*.whl
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: tensorflow-io-release-macos-arm64
          path: wheelhouse

  release-candidate-macos-arm64:
    name: Release Candidate (MacOS arm64)
    needs: release-macos-arm64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: tensorflow-io-release-macos-arm64
          path: wheelhouse
      - run: |
          set -x -e
          sha256sum wheelhouse/*.whl | sort -u > wheelhouse.sha256
          git rev-parse --verify HEAD > wheelhouse.commit
          grep 'version = ' tensorflow_io/python/ops/version_ops.py  | sed -E 's@^.*version = "@@g' | sed -E 's@".*$@@g' > wheelhouse.version
          cat wheelhouse.sha256
          cat wheelhouse.commit
          cat wheelhouse.version
          echo "::set-output name=version::$(cat wheelhouse.version)"
        id: info
      - run: |-
          cat <<EOF > Dockerfile
          FROM gcr.io/distroless/base-debian11
          COPY wheelhouse /wheelhouse
          COPY wheelhouse.sha256 /wheelhouse.sha256
          COPY wheelhouse.commit /wheelhouse.commit
          COPY wheelhouse.version /wheelhouse.version
          EOF
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: tfsigio
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          push: true
          tags: tfsigio/candidate:macos-arm64-${{ steps.info.outputs.version }}


